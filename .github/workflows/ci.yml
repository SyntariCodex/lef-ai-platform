name: LEF CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio pytest-cov
          
      - name: Run tests
        run: |
          pytest tests/ --cov=src/ --cov-report=xml
          
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: lef
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
      - name: Deploy to AWS
        run: |
          aws cloudformation deploy \
            --template-file deploy/aws/cloudformation/lef-infrastructure.yml \
            --stack-name lef-production \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides \
              Environment=production \
              ImageTag=${{ github.sha }}
              
      - name: Update monitoring
        run: |
          aws cloudwatch put-metric-alarm \
            --alarm-name "LEF-System-Health" \
            --alarm-description "Monitor LEF system health" \
            --metric-name "SystemHealth" \
            --namespace "LEF" \
            --statistic "Average" \
            --period 300 \
            --threshold 0.8 \
            --comparison-operator "LessThanThreshold" \
            --evaluation-periods 2 \
            --alarm-actions ${{ secrets.SNS_TOPIC_ARN }} 